{"mappings":"AAAA,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,eAAe,EAAC,CAAC;IACtC,GAAG,CAAC,QAAQ;IACZ,EAAE,EAAC,MAAM,CAAC,eAAe,KAAG,CAAQ,SAC/B,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAS,AAAT,EAAS,AAAT,qBAAS;;SAC7D,EAAE,EAAC,eAAe,YAAY,KAAK,EAEpC,QAAQ,GAAG,eAAe;IAI/B,MAAM,CAAC,CAAC;QAEJ,IAAI,EAAC,QAAQ,EAAC,CAAC;YACX,GAAG,CAAC,KAAK,GAAE,CAAC,CAAC;YACb,GAAG,CAAC,GAAG,CAAC,CAAC,GAAE,CAAC,EAAC,CAAC,GAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,GAAG,CAAC;gBAChC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,gBAAgB,CAAC,QAAQ;gBAClE,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS;YAClC,CAAC;YACD,KAAK,CAAC,MAAM,GAAE,IAAI,AAAC,CAAM,AAAN,EAAM,AAAN,IAAM;;YAC1B,KAAK,CAAC,MAAM,GAAE,MAAM,CAAC,KAAK;YAC1B,MAAM,CAAC,MAAM;QAChB,CAAC;QACF,IAAI,EAAC,EAAE,EAAC,CAAC;YACR,GAAG,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,GAC3B,EAAE,CAAC,IAAI,CAAC,IAAI,EAAC,QAAQ,CAAC,CAAC,GAAE,CAAC;YAE9B,MAAM,CAAC,IAAI;QACZ,CAAC;QACD,MAAM,IAAE,CAAC;YACL,KAAK,CAAC,KAAK,GAAE,CAAC,CAAC;YACd,IAAI,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC;gBAAA,EAAE,EAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,MAAI,EAAE,EAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU;YAAC,CAAC;YACtF,MAAM,CAAC,MAAM,CAAC,KAAK;QACxB,CAAC;QACD,QAAQ,IAAE,CAAC;YACV,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC;gBACjB,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ;YAE7B,CAAC;YACD,MAAM,CAAC,MAAM,CAAC,KAAK;QACrB,CAAC;QACA,KAAK,IAAE,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,QAAQ;QACxB,CAAC;QACD,QAAQ,EAAC,SAAS,EAClB,CAAC;YACG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,GAC3B,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,SAAS;YAEvC,MAAM,CAAC,IAAI;QACf,CAAC;QACD,GAAG,IAAE,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,MAAM;QACtB,CAAC;QACD,MAAM,EAAC,eAAe,CAAC,MAAM;IACjC,CAAC;AAEL,CAAC","sources":["src/jquery.js"],"sourcesContent":["window.jQuery = function(selectorOrArray){\r\n    let elements\r\n    if(typeof selectorOrArray==='string'){\r\n         elements = document.querySelectorAll(selectorOrArray)//找到所有的元素\r\n    }else if(selectorOrArray instanceof Array)\r\n    {\r\n         elements = selectorOrArray\r\n    }\r\n\r\n    \r\n    return {\r\n       \r\n        find(selector){\r\n            let array =[]\r\n            for(let i =0;i<elements.length;i++){\r\n                const elements2 = Array.from(elements[i].querySelectorAll(selector))\r\n                array = array.concat(elements2)\r\n            }\r\n            array.oldApi =this //api1\r\n           const newApi =jQuery(array)\r\n           return newApi\r\n        },\r\n       each(fn){\r\n        for(let i=0;i<elements.length;i++){\r\n            fn.call(null,elements[i],i)\r\n        }\r\n        return this\r\n       },\r\n       parent(){\r\n           const array =[]\r\n            this.each((node)=>{if(array.indexOf(node.parentNode)===-1)array.push(node.parentNode)})\r\n            return jQuery(array)\r\n       },\r\n       children(){\r\n        const array = []\r\n        this.each((node)=>{\r\n          array.push(...node.children)\r\n  \r\n        })\r\n        return jQuery(array)\r\n      },\r\n       print(){\r\n            console.log(elements)\r\n        },\r\n        addClass(className)\r\n        {\r\n            for(let i=0;i<elements.length;i++){\r\n                elements[i].classList.add(className)\r\n            }\r\n            return this\r\n        },\r\n        end(){\r\n            return this.oldApi\r\n        },\r\n        oldApi:selectorOrArray.oldApi,\r\n    }\r\n   \r\n}"],"names":[],"version":3,"file":"index.51585d64.js.map","sourceRoot":"/__parcel_source_root/"}